name: "commit-master"

on:
  push:
    branches: 
    - 'master'
# 如果希望手工控制镜像tag,可以配置放开这个参数，这样每次action执行，都会弹出来image_tag对话框让你填写
#  workflow_dispatch: 
#    inputs:
#      tags:
#        required: true
#        default: 'v1.0.0.1'
#        description: 'docker build image tag'  
env: 
  IMAGE_TAG: maven-samp-38cb960
  IPADDR: 119.91.248.254
  REGIONID: cn-north-4
# IMAGE_TAG: ${{ github.event.inputs.image_tag }} //如果希望手工控制镜像tag,也需要放开这行，同时屏蔽上面那行IMAGE_TAG
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out 
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: build maven project
      run: mvn clean -U package -Dmaven.test.skip 

    # 上传当前版本到OBS中归档，需要提前准备OBS的AK/SK,并在github项目添加ACCESSKEY和SECRETACCESSKEY两个secrets
    - name: Upload To Huawei OBS
      uses: huaweicloud/obs-helper@v1.0.0
      id: upload_file_to_obs
      with:
        access_key: ${{ secrets.ACCESSKEY }}
        secret_key: ${{ secrets.SECRETACCESSKEY }}
        region: ${{ env.REGIONID }}
        bucket_name: obs-lizy2
        operation_type: upload
        local_file_path: target/intro.war
        obs_file_path: workflow/intro/v1.0.0.1/

    # 检查docker版本
    - name: check docker version
      run: docker -v
      
    # docker login,设置登陆到华为的swr
    - name: Log in to HuaweiCloud SWR
      uses: huaweicloud/swr-login@v1
      with:
        region: ${{ env.REGIONID }}
        access-key-id: ${{ secrets.ACCESSKEY }}
        access-key-secret: ${{ secrets.SECRETACCESSKEY }}

    # 设置 docker 环境
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    # build 并且 push docker 镜像
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: swr.${{ env.REGIONID }}.myhuaweicloud.com/swr-lizy2/tomcat:${{ env.IMAGE_TAG }}

    # 镜像安全扫描，如果需要扫描镜像里是否有安全漏洞，可以使用如下方式进行扫描,severity默认为UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
    - name: Scan image by trivy
      uses: cfy9/trivy-action@v0.0.2
      with:
        image_name: swr.${{ env.REGIONID }}.myhuaweicloud.com/swr-lizy2/tomcat:${{ env.IMAGE_TAG }}
        scan_type: image
        format: table
        severity: UNKNOWN

    # 在服务器上部署docker并启动，如果服务器已经安装了docker环境，可以跳过
    - name: install docker and start docker service
      uses: huaweicloud/ssh-remote-action@v1.0.1
      with:
        ipaddr: ${{ env.IPADDR }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        commands: |
          curl -sSL https://get.docker.com/ | sh
          systemctl enable docker.service
          systemctl start docker.service
          docker -v
    # 下载镜像并启动服务,如果第一次启动，前面的docker stop和docker run可以跳过
    - name: install docker and start docker service
      uses: huaweicloud/ssh-remote-action@v1.0.1
      with:
        ipaddr: ${{ env.IPADDR }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        commands: |
          docker stop `docker ps -a | grep tomcat | grep maven-sample | awk '{print $1}'`
          docker rm `docker ps -a | grep tomcat | grep maven-sample | awk '{print $1}'`
          docker pull swr.${{ env.REGIONID }}.myhuaweicloud.com/swr-lizy2/tomcat:${{ env.IMAGE_TAG }}
          docker run -d -p 8080:8080 swr.${{ env.REGIONID }}.myhuaweicloud.com/swr-lizy2/tomcat:${{ env.IMAGE_TAG }}

    # 检查docker版本
    - name: check docker version
      run: |
        sleep 30
        curl -kv http://${{ env.IPADDR }}:8080